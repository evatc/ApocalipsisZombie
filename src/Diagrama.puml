@startuml
' Definici贸n de clases principales

class Cliente {
  + start(Stage): void
  + main(String[]): void
}

class ClienteController {
  - apocalipsis: InterfazApocalipsis
  - timeline: Timeline
  + initialize(URL, ResourceBundle): void
  + actualizarDatos(): void
  + pausar(): void
  + reanudar(): void
}

class Servidor {
  + start(Stage): void
  + main(String[]): void
}

class VentanaController {
  - labelComida: Label
  - txtDescanso: TextField
  - txtComedor: TextField
  - txtZonaComun: TextField
  - txtRefugioARiesgo1: TextField
  - txtTunel1: TextField
  - txtRiesgoARefugio1: TextField
  - txtRefugioARiesgo2: TextField
  - txtTunel2: TextField
  - txtRiesgoARefugio2: TextField
  - txtRefugioARiesgo3: TextField
  - txtTunel3: TextField
  - txtRiesgoARefugio3: TextField
  - txtRefugioARiesgo4: TextField
  - txtTunel4: TextField
  - txtRiesgoARefugio4: TextField
  - txtRiesgoHumanos1: TextField
  - txtRiesgoZombies1: TextField
  - txtRiesgoHumanos2: TextField
  - txtRiesgoZombies2: TextField
  - txtRiesgoHumanos3: TextField
  - txtRiesgoZombies3: TextField
  - txtRiesgoHumanos4 : TextField
  - txtRiesgoZombies4: TextField
  + initialize(URL, ResourceBundle): void
}

interface InterfazApocalipsis {
  + getHumanosRefugio(): int
  + getHumanosTunel(int): int
  + getHumanosZonaRiesgo(int): int
  + getZombiesZonaRiesgo(int): int
  + getTop3(): String
  + pausar(): void
  + reanudar(): void
  + esperarSiPausado(): void
}

class ObjetoApocalipsis {
  - refugio: Refugio
  - tunel: Tunel
  - zonaRiesgo: Zona_riesgo
  - pausado: boolean
  - log: Logs
  + getHumanosRefugio(): int
  + getHumanosTunel(int): int
  + getHumanosZonaRiesgo(int): int
  + getZombiesZonaRiesgo(int): int
  + getTop3(): String
  + pausar(): void
  + reanudar(): void
  + esperarSiPausado(): void
}

class Humano {
  - id: String
  - refugio: Refugio
  - tunel: Tunel
  - zonaRiesgo: Zona_riesgo
  - herido: boolean
  - vivo: boolean
  - ataque: boolean
  - tiempo_ataque1: Semaphore
  - tiempo_ataque2: Semaphore
  - tiempo_ataque3: Semaphore
  - tiempo_ataque4: Semaphore
  - log: Logs
  - apocalipsis: InterfazApocalipsis
  + run(): void
  + gethumanoId(): String
  + setHerido(boolean): void
  + setVivo(boolean): void
  + setAtaque(boolean): void
}

class Zombie {
  - id: String
  - cont_muertes: int
  - zonaRiesgo: Zona_riesgo
  - convertido: boolean
  - n_zonaRiesgo: int
  - log: Logs
  - apocalipsis: InterfazApocalipsis
  + run(): void
  + getzombieId(): String
  + getCont_muertes(): int
  + setCont_muertes(int): void
  + setConvertido(boolean): void
  + setN_zonaRiesgo(int): void
}

class Refugio {
  - lDescanso: ListaThreads
  - lComedor: ListaThreads
  - lZonaComun: ListaThreads
  - comida: AtomicInteger
  - filaComedor: ConcurrentLinkedQueue<Humano>
  - log: Logs
  - label: Label
  + dejarComida(Humano): void
  + comer(Humano): void
  + getNumHumanos(): int
}

class Tunel {
  - esperanRefugioARiesgo1-4: ListaThreads
  - dentroTunel1: ListaThreads
  - dentroTunel2: ListaThreads
  - dentroTunel3: ListaThreads
  - dentroTunel4: ListaThreads
  - esperanRiesgoARefugio1: ListaThreads
  - esperanRiesgoARefugio2: ListaThreads
  - esperanRiesgoARefugio3: ListaThreads
  - esperanRiesgoARefugio4: ListaThreads
  - zonaRiesgo: Zona_riesgo
  - log: Logs
  - apocalipsis: InterfazApocalipsis
  + entrar_zona_riesgo1(Humano): void
  + entrar_zona_riesgo2(Humano): void
  + entrar_zona_riesgo3(Humano): void
  + entrar_zona_riesgo4(Humano): void
  + entrar1_zona_descanso(Humano): void
  + entrar2_zona_descanso(Humano): void
  + entrar3_zona_descanso(Humano): void
  + entrar4_zona_descanso(Humano): void
  + getNumHumanos(int): int
}

class Zona_riesgo {
  - riesgoHumanos1: ListaThreads
  - riesgoHumanos2: ListaThreads
  - riesgoHumanos3: ListaThreads
  - riesgoHumanos4: ListaThreads
  - riesgoZombies1: ListaThreads
  - riesgoZombies2: ListaThreads
  - riesgoZombies3: ListaThreads
  - riesgoZombies4: ListaThreads
  - lh1: ConcurrentLinkedQueue<Humano>
  - lh2: ConcurrentLinkedQueue<Humano>
  - lh3: ConcurrentLinkedQueue<Humano>
  - lh4: ConcurrentLinkedQueue<Humano>
  - lz1: ConcurrentLinkedQueue<Zombie>
  - lz2: ConcurrentLinkedQueue<Zombie>
  - lz3: ConcurrentLinkedQueue<Zombie>
  - lz4: ConcurrentLinkedQueue<Zombie>
  - cerrojo1: Lock
  - cerrojo2: Lock
  - cerrojo3: Lock
  - cerrojo4: Lock
  - lock1: Semaphore
  - lock2: Semaphore
  - lock3: Semaphore
  - lock4: Semaphore
  - tiempo_ataque1: Semaphore
  - tiempo_ataque2: Semaphore
  - tiempo_ataque3: Semaphore
  - tiempo_ataque4: Semaphore
  - log: Logs
  - apocalipsis: InterfazApocalipsis
  - topMuertes: ArrayList<Zombie>
  + entrar_humano(Humano, int): void
  + entrar_zombie(Zombie, int): void
  + salir_humano(Humano, int): void
  + salir_zombie(Zombie, int): void
  + ataque(Zombie, int): void
  + getTopMuertes(): ArrayList<Zombie>
}

class ListaThreads {
  - listah: ArrayList<Humano>
  - listaz: ArrayList<Zombie>
  - txtfield: TextField
  + meterh(Humano): void
  + sacarh(Humano): void
  + meterz(Zombie): void
  + sacarz(Zombie): void
  + sizeh(): int
  + sizez(): int
}

class Logs {
  - fichero: File
  - escritor: BufferedWriter
  - formato: DateTimeFormatter
  + escribir(String): void
  + abrir(boolean): void
  + cerrar(): void
}

' Relaciones de composici贸n (relleno negro)
ObjetoApocalipsis *-- Refugio
ObjetoApocalipsis *-- Tunel
ObjetoApocalipsis *-- Zona_riesgo
Refugio *-- ListaThreads
Tunel *-- ListaThreads
Zona_riesgo *-- ListaThreads

' Relaciones de agregaci贸n (diamante blanco)
VentanaController o-- ObjetoApocalipsis
Humano o-- Refugio
Humano o-- Tunel
Humano o-- Zona_riesgo
Zombie o-- Zona_riesgo

' Relaciones de dependencia (flecha punteada)
Cliente ..> ClienteController
ClienteController ..> InterfazApocalipsis
Servidor ..> VentanaController
ObjetoApocalipsis ..|> InterfazApocalipsis
Humano ..> Logs
Humano ..> InterfazApocalipsis
Zombie ..> Logs
Zombie ..> InterfazApocalipsis
Refugio ..> Logs
Tunel ..> Logs
Tunel ..> InterfazApocalipsis
Tunel ..> Zona_riesgo
Zona_riesgo ..> Logs
Zona_riesgo ..> InterfazApocalipsis
ListaThreads ..> Humano
ListaThreads ..> Zombie

' Relaciones de creaci贸n (flecha punteada con <<create>>)
Zona_riesgo ..> Zombie : <<create>>


skinparam classAttributeIconSize 0
skinparam linetype ortho
skinparam dpi 150

@enduml